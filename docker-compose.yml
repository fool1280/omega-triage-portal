version: '3.9'

services:
  db:
    image: registrytriageportal.azurecr.io/triage-postgres
    build:
      context: postgres
    restart: unless-stopped
    container_name: triage-postgres
    ports:
      - "5432:5432"
    env_file:
      - ./src/.env-template
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=triage
      - POSTGRES_USER=triage_user
      - POSTGRES_PASSWORD=triage_password
    healthcheck:
        test: pg_isready -d $$DATABASE_NAME -U $$DATABASE_USER
        interval: 10s
        timeout: 5s
        retries: 5

  redis:
    image: redis:latest
    restart: unless-stopped
    network_mode: service:db
    volumes:
      - redis-data:/data

  triage-portal:
    image: registrytriageportal.azurecr.io/triage-portal
    build:
      context: src
    command: python3 manage.py runserver 0.0.0.0:8001
    ports:
      - "8001:8001"
    container_name: triage-portal
    environment:
      - POSTGRES_NAME=triage
      - POSTGRES_USER=triage_user
      - POSTGRES_PASSWORD=triage_password
    depends_on:
      db:
          condition: service_healthy
      redis:
          condition: service_started
    env_file:
      - ./src/.env-template

volumes:
  postgres-data:
  redis-data:
